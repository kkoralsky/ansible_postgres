---
- name: install psycopg2 to manage
  apt: name=python-psycopg2
  tags: bootstrap

- name: install locale
  apt: name=locales

- name: generate locale 
  locale_gen: name='{{ postgres_locale }}'

- import_tasks: install.yml
  when: postgres_install
  tags: postgres_install

- import_tasks: configure.yml
  when: postgres_configure
  tags: postgres_configure

- meta: flush_handlers

- name: add roles
  postgresql_user:
    name: '{{ item.name }}'
    password: '{{ item.pass|default("") }}'
    port: '{{ postgres_port }}'
    role_attr_flags: '{{ item.privs|default("") }}'
  with_items: '{{ postgres_roles }}' 

- name: add replication role
  postgresql_user: name=replication password='{{ postgres_replication.password|default(omit) }}'
                   role_attr_flags=REPLICATION
  when:
    - postgres_replication
    - not postgres_standby

- name: create dbs
  postgresql_db: name='{{ item.name }}' owner='{{ item.owner }}' port='{{ postgres_port }}'
  with_items: '{{ postgres_dbs }}'

- name: add extensions
  postgresql_ext: name={{ item.1 }} db='{{ item.0.name }}' port='{{ postgres_port }}'
  with_subelements:
    - '{{ postgres_dbs }}'
    - exts

- name: add more db priviledges
  postgresql_privs: roles='{{ item.1.roles }}' type='{{ item.1.type|default("table") }}'
                    objs='{{ item.1.objs|default("ALL_IN_SCHEMA") }}' db='{{ item.0.name }}'
                    privs='{{ item.1.privs|default("ALL") }}'
  with_subelements:
    - '{{ postgres_dbs }}'
    - privs

- block:
  - name: create archive dest
    file: name='{{ postgres_replication.archive_dest }}' state=directory
          owner=postgres group=postgres
  - name: create rsync destination definition for WAL archive
    template: src=rsyncd.j2 dest=/etc/rsyncd.conf
    notify: reload rsyncd
  when:
    - postgres_replication
    - postgres_replication.archive_dest is defined
    - postgres_standby
