---
- name: ensure data directory is present
  file: name='{{ postgres_data_directory }}' state=directory
        owner=postgres group=postgres

- name: check if cluster already exists in different dir
  command: 'pg_lsclusters -h {{ postgres_version }} main'
  register: cluster_info
  changed_when: false

- block:
  - name: stop cluster before moving it to new dir
    service: name=postgresql state=stopped
  - name: move cluster to new data dir
    command: 'mv -T {{ cluster_info.stdout.split()[5] }} {{ postgres_data_directory }}'
  when:
    - cluster_info.rc is defined 
    - cluster_info.rc == 0
    - cluster_info.stdout.split()[5] != postgres_data_directory
    - not postgres_standby

- name: create cluster
  command: 'pg_createcluster -d {{ postgres_data_directory }} {{ postgres_version }} main'
  register: create_cluster
  changed_when: create_cluster.rc == 0
  failed_when:
    - create_cluster.rc != 0
    - not 'cluster configuration already exists' in create_cluster.stderr 
  when:
    - cluster_info.rc is defined
    - cluster_info.rc != 0
    - not postgres_standby

- name: ensure that config dir is created
  file: path='/etc/postgresql/{{ postgres_version }}/main'
        state=directory mode='u=rwx,g=rx,o=rx' owner=postgres group=postgres

- name: configure postgres
  template:
    src: '{{ item }}'
    dest: '/etc/postgresql/{{ postgres_version }}/main/{{ item|replace(".j2", "") }}'
    mode: 0640
    owner: postgres
    group: postgres
  with_items:
    - postgresql.conf.j2
    - pg_hba.conf.j2
    - pg_ident.conf.j2
  notify: restart dbserver

- name: ensure there is no recovery.conf file on master
  file: name='{{ postgres_data_directory }}/recovery.conf' state=absent
  when: not postgres_standby
